name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v2

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Lint with flake8
      run: |
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics || true

    - name: Test with pytest
      run: |
        uv run pytest test_app.py test_generate_car_data.py -v --tb=short

    - name: Check code formatting with black
      run: |
        uv run black --check --diff . || true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install uv
      uses: astral-sh/setup-uv@v2

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run safety check
      run: |
        uv run safety check || true

    - name: Run bandit security linter
      run: |
        uv run bandit -r . -f json -o bandit-report.json || true
        uv run bandit -r . -ll || true

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t influx-dummy-data-generator:latest .

    - name: Test Docker image
      run: |
        docker run --rm influx-dummy-data-generator:latest python --version
